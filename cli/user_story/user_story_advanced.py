from typing import List, Optional

from pydantic import BaseModel, Field


class UserStory(BaseModel):
    story: str = Field(
        description="The user story in the format 'As a [role], I want [goal] so that [benefit]'"
    )
    user_persona: str = Field(description="Detailed description of the user persona")
    industry: str = Field(
        description="The industry the product would be in, e.g., 'Health and Wellness', 'Entertainment', etc."
    )
    user_journey_stage: str = Field(description="Where the user is in their journey with the product")
    kpis: list[str] = Field(description="Key Performance Indicators for this story")
    acceptance_criteria: list[str] = Field(
        description="Specific conditions that must be met for the story to be considered complete"
    )
    priority: str = Field(description="Importance of this story relative to others (e.g., high, medium, low)")
    effort_estimate: str = Field(
        description="Rough estimate of the work required (e.g., story points or t-shirt sizes)"
    )
    dependencies: list[str] = Field(
        description="Other stories or tasks that need to be completed before this one"
    )
    stakeholders: list[str] = Field(
        description="Roles or departments impacted by or interested in this story"
    )
    business_value: str = Field(description="Brief explanation of how this story aligns with business goals")
    risks: list[str] = Field(description="Potential challenges or obstacles in implementing this story")
    user_research_insights: str = Field(
        description="Relevant findings from user research that support this story"
    )
    feature_area: str = Field(description="Part of the product this story relates to")
    epic: str = Field(description="The larger initiative or theme this story falls under")
    constraints: str = Field(description="Technical, time, or resource limitations to consider")
    competitive_analysis: str = Field(description="How this feature compares to competitors' offerings")
    success_metrics: list[str] = Field(
        description="How the impact of this story will be measured once implemented"
    )


class UserStoryExample(BaseModel):
    input: str = Field(description="The idea for the user story")
    tool_calls: List[UserStory] = Field(description="The user stories generated by the tool")
    tool_outputs: Optional[List[str]] = Field(description="The outputs of the tool calls", default=None)


def get_user_story_examples():
    examples: List[UserStoryExample] = []

    examples.append(
        UserStoryExample(
            input="Create an app that helps users track their daily water intake",
            tool_calls=[
                UserStory(
                    story="As a health-conscious individual, I want to track my daily water intake so that I can stay hydrated and improve my overall health",
                    user_persona="Sarah, 32-year-old fitness instructor living in a metropolitan area",
                    industry="Health and Wellness",
                    user_journey_stage="Awareness",
                    kpis=["Daily active users", "Water intake logged per user", "User retention rate"],
                    acceptance_criteria=[
                        "Allow users to set daily water intake goals",
                        "Provide reminders to drink water throughout the day",
                        "Display progress towards daily goal visually",
                    ],
                    priority="High",
                    effort_estimate="Medium (13 story points)",
                    dependencies=["User authentication system", "Push notification service"],
                    stakeholders=["Product team", "UX designers", "Nutritionists"],
                    business_value="Addresses growing health-conscious market, potential for partnerships with water bottle companies",
                    risks=["User may forget to log intake", "Accuracy of self-reported data"],
                    user_research_insights="78% of surveyed users struggle to drink enough water daily",
                    feature_area="Core functionality",
                    epic="Hydration Tracking Suite",
                    constraints="Must work offline for users without constant internet access",
                    competitive_analysis="Main competitor lacks customizable goals; our app will offer this feature",
                    success_metrics=[
                        "50% of users achieve their daily water intake goal",
                        "30% increase in daily app opens",
                    ],
                )
            ],
        )
    )

    examples.append(
        UserStoryExample(
            input="Develop a platform that helps small businesses manage their finances",
            tool_calls=[
                UserStory(
                    story="As a small business owner, I want to manage my finances efficiently so that I can keep track of expenses and profits",
                    user_persona="Alex, 45-year-old owner of a local bakery with 10 employees",
                    industry="Finance and Accounting",
                    user_journey_stage="Consideration",
                    kpis=["Monthly recurring revenue", "Customer acquisition cost", "Churn rate"],
                    acceptance_criteria=[
                        "Integrate with major banks for automatic transaction import",
                        "Generate profit and loss statements with one click",
                        "Categorize expenses automatically using AI",
                    ],
                    priority="High",
                    effort_estimate="Large (34 story points)",
                    dependencies=["Secure data storage solution", "AI categorization model"],
                    stakeholders=["Small business associations", "Accountants", "Banking partners"],
                    business_value="Taps into underserved small business market, potential for premium features upsell",
                    risks=["Data security concerns", "Complexity may overwhelm some users"],
                    user_research_insights="65% of small business owners spend 5+ hours per week on financial tasks",
                    feature_area="Financial Management",
                    epic="Small Business Financial Empowerment",
                    constraints="Must comply with financial regulations in multiple countries",
                    competitive_analysis="We offer more customization for different business types compared to main competitors",
                    success_metrics=[
                        "Reduce time spent on financial tasks by 40%",
                        "90% accuracy in expense categorization",
                    ],
                )
            ],
        )
    )

    # Add more examples as needed...

    return examples
